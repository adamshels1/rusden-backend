name: Parse Telegram Channels (Full Flow)

on:
  schedule:
    # –ó–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç
    - cron: '*/30 * * * *'

  # –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Ä—É—á–Ω—É—é
  workflow_dispatch:

jobs:
  parse:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm install

    - name: Run Full Parsing Flow
      run: |
        echo "üöÄ Starting complete Telegram parsing flow..."

        # –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ñ–ª–æ—É –ø–∞—Ä—Å–∏–Ω–≥–∞
        RUN_ONCE=true node run-full-flow.js

        echo "‚úÖ Complete parsing flow finished!"
      env:
        # Supabase
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

        # Groq AI
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}

        # Telegram
        TELEGRAM_API_ID: ${{ secrets.TELEGRAM_API_ID }}
        TELEGRAM_API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
        API_ID: ${{ secrets.API_ID }}
        API_HASH: ${{ secrets.API_HASH }}

    - name: Verify Results
      run: |
        echo "üîç Verifying API results..."

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º health endpoint
        curl -s https://rusden-backend.onrender.com/health

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        response=$(curl -s https://rusden-backend.onrender.com/api/listings)
        count=$(echo "$response" | jq '.data | // length')

        echo "üìä Current listings count: $count"
        echo "‚úÖ Parsing completed and verified!"