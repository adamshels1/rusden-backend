require('dotenv').config();
const fs = require('fs');
const path = require('path');
const { createClient } = require('@supabase/supabase-js');
const Groq = require('groq-sdk').default;

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_ANON_KEY
);

const groq = new Groq({ apiKey: process.env.GROQ_API_KEY });
const BUCKET_NAME = 'listings-images';
const IMAGES_DIR = path.resolve(__dirname, 'scripts/images');

const SYSTEM_PROMPT = `–¢—ã ‚Äî AI-–∞–≥–µ–Ω—Ç –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –∏–∑ —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã—Ö Telegram-–∫–∞–Ω–∞–ª–æ–≤ –≤ –¢—É—Ä—Ü–∏–∏.

–¢–≤–æ—è –∑–∞–¥–∞—á–∞: –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ–¥–Ω—É –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –∏–∑–≤–ª–µ—á—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.

**–í–ê–ñ–ù–û –¥–ª—è location:**
- –ì–æ—Ä–æ–¥–∞ –í–°–ï–ì–î–ê –ø–∏—à–∏ –¢–û–õ–¨–ö–û –∏–∑ —Å–ø–∏—Å–∫–∞: –ê–ª–∞–Ω—å—è, –ê–Ω—Ç–∞–ª—å—è, –°—Ç–∞–º–±—É–ª, –ë–æ–¥—Ä—É–º, –ò–∑–º–∏—Ä, –ê–Ω–∫–∞—Ä–∞, –ú–∞—Ä–º–∞—Ä–∏—Å, –§–µ—Ç—Ö–∏–µ, –ö–µ–º–µ—Ä
- –í—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω–∞–∑–≤–∞–Ω–∏–π –ø—Ä–∏–≤–æ–¥–∏ –∫ –µ–¥–∏–Ω–æ–º—É: "Alanya"/"–ê–ª–∞–Ω–∏—è" ‚Üí "–ê–ª–∞–Ω—å—è", "Antalya" ‚Üí "–ê–Ω—Ç–∞–ª—å—è"
- –ï—Å–ª–∏ –≤–∏–¥–∏—à—å "—Ü–µ–Ω—Ç—Ä", "—Ü–µ–Ω—Ç—Ä –ê–ª–∞–Ω–∏–∏", "center" - –æ–ø—Ä–µ–¥–µ–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ä–∞–π–æ–Ω –∏–ª–∏ –æ—Å—Ç–∞–≤—å district –ø—É—Å—Ç—ã–º
- –†–∞–π–æ–Ω—ã —Ç–æ–∂–µ –ø–∏—à–∏ –ø–æ-—Ä—É—Å—Å–∫–∏: –ú–∞—Ö–º—É—Ç–ª–∞—Ä, –ö–∞—Ä–≥—ã–¥–∂–∞–∫, –¢–æ—Å–º—É—Ä, –û–±–∞ –∏ —Ç.–¥.

**–ö–∞—Ç–µ–≥–æ—Ä–∏–∏:**
- realty: –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å - –∫–≤–∞—Ä—Ç–∏—Ä—ã, –¥–æ–º–∞, –≤–∏–ª–ª—ã, —Å—Ç—É–¥–∏–∏, –∫–æ–º–Ω–∞—Ç—ã (—Å –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏: –ü—Ä–æ–¥–∞–∂–∞ –∏–ª–∏ –ê—Ä–µ–Ω–¥–∞). –í–ê–ñ–ù–û: –µ—Å–ª–∏ —É–ø–æ–º–∏–Ω–∞—é—Ç—Å—è 1+1, 2+1, —Å—Ç—É–¥–∏—è, –∫–≤–∞—Ä—Ç–∏—Ä–∞, –∫–æ–º–Ω–∞—Ç–∞, –¥–æ–º, –≤–∏–ª–ª–∞ - —ç—Ç–æ –í–°–ï–ì–î–ê realty!
- job: –≤–∞–∫–∞–Ω—Å–∏–∏ - –∫–æ–≥–¥–∞ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å/–∫–æ–º–ø–∞–Ω–∏—è –ò–©–ï–¢ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–≤–∞—Ä, –Ω—É–∂–µ–Ω –≤–æ–¥–∏—Ç–µ–ª—å). –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤, –ø—Ä–µ–¥–ª–∞–≥–∞—é—â–∏—Ö —É—Å–ª—É–≥–∏!
- service: —É—Å–ª—É–≥–∏ - –∫–æ–≥–¥–∞ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ü–†–ï–î–õ–ê–ì–ê–ï–¢ —Å–≤–æ–∏ —É—Å–ª—É–≥–∏ (–¥–∞—é —É—Ä–æ–∫–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ, –¥–µ–ª–∞—é —Ä–µ–º–æ–Ω—Ç, –ø—Å–∏—Ö–æ–ª–æ–≥, —é—Ä–∏—Å—Ç, –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å, —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä)
- goods: –ø—Ä–æ–¥–∞–∂–∞ —Ç–æ–≤–∞—Ä–æ–≤ (–º–µ–±–µ–ª—å, —Ç–µ—Ö–Ω–∏–∫–∞, –æ–¥–µ–∂–¥–∞ –∏ —Ç.–¥.)
- auto: –∞–≤—Ç–æ–º–æ–±–∏–ª–∏, –º–∞—à–∏–Ω—ã, –∞–≤—Ç–æ, –º–æ—Ç–æ, —Å–∫—É—Ç–µ—Ä—ã (—Å –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏: –ü—Ä–æ–¥–∞–∂–∞ –∏–ª–∏ –ê—Ä–µ–Ω–¥–∞). –í–ê–ñ–ù–û: —Ç–æ–ª—å–∫–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞!

**–û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ:**
{
  "category": "realty" | "job" | "service" | "goods" | "auto" | "other",
  "subcategory": "–¥–ª—è realty –∏ auto: –ü—Ä–æ–¥–∞–∂–∞ –∏–ª–∏ –ê—Ä–µ–Ω–¥–∞. –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –º–æ–∂–Ω–æ –æ–ø–∏—Å–∞—Ç—å —Ç–æ—á–Ω–µ–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –º–µ–±–µ–ª—å, —Ç–µ—Ö–Ω–∏–∫–∞, –≤–∞–∫–∞–Ω—Å–∏—è –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–∞)",
  "title": "–∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (–¥–æ 100 —Å–∏–º–≤–æ–ª–æ–≤)",
  "description": "–ø–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
  "price": {
    "amount": —á–∏—Å–ª–æ –∏–ª–∏ null,
    "currency": "EUR" | "USD" | "TRY" | null,
    "period": "month" | "day" | "once" | null
  },
  "location": {
    "city": "–¢–û–õ–¨–ö–û –æ–¥–Ω–æ –∏–∑: –ê–ª–∞–Ω—å—è, –ê–Ω—Ç–∞–ª—å—è, –°—Ç–∞–º–±—É–ª, –ë–æ–¥—Ä—É–º, –ò–∑–º–∏—Ä, –ê–Ω–∫–∞—Ä–∞, –ú–∞—Ä–º–∞—Ä–∏—Å, –§–µ—Ç—Ö–∏–µ, –ö–µ–º–µ—Ä –∏–ª–∏ null",
    "district": "—Ä–∞–π–æ–Ω/–º–∏–∫—Ä–æ—Ä–∞–π–æ–Ω –ø–æ-—Ä—É—Å—Å–∫–∏ (–ú–∞—Ö–º—É—Ç–ª–∞—Ä, –û–±–∞, –¢–æ—Å–º—É—Ä, –ö–∞—Ä–≥—ã–¥–∂–∞–∫ –∏ —Ç.–¥.) –∏–ª–∏ null. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π '—Ü–µ–Ω—Ç—Ä'"
  },
  "contact": {
    "phone": "–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, +, -, —Å–∫–æ–±–∫–∏) –∏–ª–∏ null. –ï—Å–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞ - –ø–∏—à–∏ null",
    "telegram": "—é–∑–µ—Ä–Ω–µ–π–º —Ç–µ–ª–µ–≥—Ä–∞–º –ë–ï–ó @ (–Ω–∞–ø—Ä–∏–º–µ—Ä: ivan123) –∏–ª–∏ null. –í–ê–ñ–ù–û: –µ—Å–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —é–∑–µ—Ä–Ω–µ–π–º–∞ - –ø–∏—à–∏ null. –ù–ï –ø–∏—à–∏ '–∞–≤—Ç–æ—Ä –æ–±—ä—è–≤–ª–µ–Ω–∏—è', '—Å–º. –ø—Ä–æ—Ñ–∏–ª—å' –∏ –ø–æ–¥–æ–±–Ω–æ–µ",
    "other": "–¥—Ä—É–≥–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã (email, —Å–∞–π—Ç) –∏–ª–∏ null"
  },
  "realty": {
    "rooms": "1+1, 2+1, studio –∏ —Ç.–¥. –∏–ª–∏ null",
    "area_sqm": —á–∏—Å–ª–æ –∏–ª–∏ null,
    "floor": —á–∏—Å–ª–æ –∏–ª–∏ null,
    "distance_to_sea": —á–∏—Å–ª–æ –≤ –º–µ—Ç—Ä–∞—Ö –∏–ª–∏ null
  },
  "language": "ru" | "en" | "tr",
  "is_spam": true | false,
  "confidence": 0.0-1.0
}`;

async function categorizeMessage(text, author) {
  let userPrompt = `–ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–π —ç—Ç–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ:\n\n${text}`;

  // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã –∞–≤—Ç–æ—Ä–∞ –µ—Å–ª–∏ –µ—Å—Ç—å
  if (author) {
    userPrompt += `\n\n–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∞–≤—Ç–æ—Ä–∞:\n`;
    if (author.phone) userPrompt += `–¢–µ–ª–µ—Ñ–æ–Ω: ${author.phone}\n`;
    if (author.username) userPrompt += `Telegram: @${author.username}\n`;
  }

  const completion = await groq.chat.completions.create({
    model: 'llama-3.1-8b-instant',
    messages: [
      { role: 'system', content: SYSTEM_PROMPT },
      { role: 'user', content: userPrompt },
    ],
    temperature: 0.3,
    response_format: { type: 'json_object' },
  });

  return JSON.parse(completion.choices[0].message.content);
}

async function uploadImageToSupabase(filename) {
  const filePath = path.join(IMAGES_DIR, filename);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
  if (!fs.existsSync(filePath)) {
    console.log(`   ‚ö†Ô∏è  –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${filename}`);
    return null;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ —É–∂–µ
  const { data: existingFile } = await supabase.storage
    .from(BUCKET_NAME)
    .list('', { search: filename });

  if (existingFile && existingFile.length > 0) {
    // –£–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º URL
    const { data } = supabase.storage
      .from(BUCKET_NAME)
      .getPublicUrl(filename);
    return data.publicUrl;
  }

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª (—É–∂–µ —Å–∂–∞—Ç—ã–π –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ)
  const fileBuffer = fs.readFileSync(filePath);
  const fileSize = fileBuffer.length;

  const { data, error } = await supabase.storage
    .from(BUCKET_NAME)
    .upload(filename, fileBuffer, {
      contentType: 'image/jpeg',
      cacheControl: '3600',
      upsert: false
    });

  if (error) {
    console.log(`   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ${filename}:`, error.message);
    return null;
  }

  // –ü–æ–ª—É—á–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π URL
  const { data: urlData } = supabase.storage
    .from(BUCKET_NAME)
    .getPublicUrl(filename);

  console.log(`   üì§ ${filename} (${Math.round(fileSize/1024)}KB)`);
  return urlData.publicUrl;
}

async function processMessages() {
  console.log('üöÄ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–∞—Ä—Å–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π\n');

  // –ß–∏—Ç–∞–µ–º —Å–ø–∞—Ä—Å–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
  const parsedPath = path.resolve(__dirname, 'scripts/parsed_messages.json');
  const messages = JSON.parse(fs.readFileSync(parsedPath, 'utf8'));

  console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${messages.length} —Å–æ–æ–±—â–µ–Ω–∏–π\n`);

  // –ü–æ–ª—É—á–∞–µ–º ID –∫–∞–Ω–∞–ª–∞ alanyadom (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —ç—Ç–æ –æ–Ω)
  const { data: channel } = await supabase
    .from('channels')
    .select('id')
    .eq('username', 'alanyadom')
    .single();

  if (!channel) {
    console.error('‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }

  let processed = 0;
  let skipped = 0;

  // –§—É–Ω–∫—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏
  const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));

  for (const msg of messages) {
    console.log(`\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`);
    console.log(`üìù –°–æ–æ–±—â–µ–Ω–∏–µ ${msg.id}`);
    console.log(`üìÑ –¢–µ–∫—Å—Ç: ${msg.text.substring(0, 100)}...`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ª–∏ —É–∂–µ
    const { data: existing } = await supabase
      .from('raw_messages')
      .select('id')
      .eq('channel_id', channel.id)
      .eq('telegram_message_id', msg.id)
      .single();

    if (existing) {
      console.log('‚è≠Ô∏è  –£–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
      skipped++;
      continue;
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º raw_message
    const { data: rawMessage, error: rawError } = await supabase
      .from('raw_messages')
      .insert({
        channel_id: channel.id,
        telegram_message_id: msg.id,
        raw_text: msg.text,
        author_info: msg.author ? {
          id: msg.author.id,
          username: msg.author.username,
          firstName: msg.author.firstName,
          lastName: msg.author.lastName,
          phone: msg.author.phone,
        } : null,
        media_urls: msg.images,
        message_date: msg.date,
      })
      .select()
      .single();

    if (rawError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è raw_message:', rawError);
      continue;
    }

    console.log('‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ raw_messages');

    // –ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ AI
    try {
      console.log('ü§ñ –û–±—Ä–∞–±–æ—Ç–∫–∞ —á–µ—Ä–µ–∑ AI...');
      const aiResult = await categorizeMessage(msg.text, msg.author);

      // –ó–∞–¥–µ—Ä–∂–∫–∞ 2 —Å–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É AI-–∑–∞–ø—Ä–æ—Å–∞–º–∏
      await delay(2000);

      // –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
      const hasValidContact =
        (aiResult.contact?.phone && aiResult.contact.phone.trim() && !/–∞–≤—Ç–æ—Ä|–ø—Ä–æ—Ñ–∏–ª—å|—Å–º\.|—Å–º–æ—Ç—Ä–∏/i.test(aiResult.contact.phone)) ||
        (aiResult.contact?.telegram && aiResult.contact.telegram.trim() && !/–∞–≤—Ç–æ—Ä|–ø—Ä–æ—Ñ–∏–ª—å|—Å–º\.|—Å–º–æ—Ç—Ä–∏|–æ–±—ä—è–≤–ª–µ–Ω–∏—è/i.test(aiResult.contact.telegram)) ||
        (aiResult.contact?.other && aiResult.contact.other.trim());

      if (!hasValidContact) {
        console.log('‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º: –Ω–µ—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤');
        skipped++;
        continue;
      }

      // –û—á–∏—â–∞–µ–º telegram –æ—Ç @ –µ—Å–ª–∏ AI –µ–≥–æ –¥–æ–±–∞–≤–∏–ª
      if (aiResult.contact?.telegram) {
        aiResult.contact.telegram = aiResult.contact.telegram.replace(/^@/, '');
      }

      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤ Supabase Storage
      const imageUrls = [];
      if (msg.images && msg.images.length > 0) {
        console.log(`üì∏ –ó–∞–≥—Ä—É–∑–∫–∞ ${msg.images.length} –∫–∞—Ä—Ç–∏–Ω–æ–∫...`);
        for (const imageName of msg.images) {
          const imageUrl = await uploadImageToSupabase(imageName);
          if (imageUrl) {
            imageUrls.push(imageUrl);
          }
        }
      }

      // –°–æ–∑–¥–∞–µ–º listing (–∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Å—Ö–µ–º—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö)
      const location = aiResult.location?.city
        ? `${aiResult.location.city}${aiResult.location.district ? ', ' + aiResult.location.district : ''}`
        : null;

      const { data: listing, error: listingError } = await supabase
        .from('listings')
        .insert({
          raw_message_id: rawMessage.id,
          category: aiResult.category,
          subcategory: aiResult.subcategory,
          title: aiResult.title,
          description: aiResult.description,
          price: aiResult.price?.amount,
          currency: aiResult.price?.currency,
          location: location,
          contact_info: {
            phone: aiResult.contact?.phone,
            telegram: aiResult.contact?.telegram,
            other: aiResult.contact?.other,
          },
          images: imageUrls, // –¢–µ–ø–µ—Ä—å —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª–Ω—ã–µ URL –∏–∑ Supabase Storage
          posted_date: msg.date,
          ai_confidence: aiResult.confidence,
        })
        .select()
        .single();

      if (listingError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è listing:', listingError);
        continue;
      }

      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω listing: ${aiResult.category} (${Math.round(aiResult.confidence * 100)}% —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å)`);
      console.log(`   –ó–∞–≥–æ–ª–æ–≤–æ–∫: ${aiResult.title}`);
      processed++;

    } catch (aiError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ AI:', aiError.message);
    }
  }

  console.log('\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
  console.log(`\n‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!`);
  console.log(`üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${processed}`);
  console.log(`‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${skipped}`);
}

processMessages().catch(console.error);
